version: "3.5"

services:
  namenode:
    image: hpccbk/hadoop-docker-namenode:2.7.2
    networks:
      - hadoop
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=hpccbk
    ports:
      - 50070:50070
    env_file:
      - ./hadoop.env
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      labels:
        traffic.docker.network: hadoop
        traffic.port: 50070

  datanode:
    image: hpccbk/hadoop-docker-datanode:2.7.2
    networks:
      - hadoop
    volumes:
      - datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    ports:
      - 50075:50075
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname != headnode.supernodexp.hpc
      labels:
        traffic.docker.network: hadoop
        traffic.port: 50075

  resourcemanager:
    image: hpccbk/hadoop-docker-resourcemanager:2.7.2
    networks:
      - hadoop
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:9864"
    env_file:
      - ./hadoop.env
    ports:
      - 8088:8088
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      labels:
        traffic.docker.network: hadoop
        traffic.port: 8088
    healthcheck:
      disable: true

  nodemanager:
    image: hpccbk/hadoop-docker-nodemanager:2.7.2
    networks:
      - hadoop
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    ports:
      - 8042:8042
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname != headnode.supernodexp.hpc
      labels:
        traffic.docker.network: hadoop
        traffic.port: 8042

  historyserver:
    image: hpccbk/hadoop-docker-historyserver:2.7.2
    networks:
      - hadoop
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    ports:
      - 8188:8188
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        traffic.docker.network: hadoop
        traffic.port: 8188

  notebook:
    image: hpccbk/hadoop-docker-notebook:2.7.2
    networks:
      - hadoop
    env_file:
      - ./hadoop.env
    ports:
      - 8001:8080
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == headnode.supernodexp.hpc
      labels:
        traffic.docker.network: hadoop
        traffic.port: 8001

volumes:
  datanode:
  namenode:
  hadoop_historyserver:

networks:
  hadoop:
    driver: overlay
    # Option for user to submit their jobs outside the cluster
    attachable: true
